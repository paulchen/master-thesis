<?xml version="1.0" encoding="UTF-8"?>

<!-- TODO cleanup, document -->
<project name="WeatherReader" default="dist" basedir=".">
	<property name="java_version" value="1.6" />
	
    <property name="src.dir" value="src" />
    <property name="src.test.dir" value="test" />
    <property name="build.dir" value="bin" />
    <property name="build.test.dir" value="bin_test" />
    <property name="build.instrument.dir" value="bin_instrument" />
    <property name="build.coverage.dir" value="coverage" />
    <property name="lib.dir" value="lib" />
    <property name="reports.dir" value="reports" />
    <property name="dist.dir" value="dist" />

    <path id="project.classpath" >
    	<pathelement location="${dist.dir}/YrNoPlugin.jar" />
    	<pathelement location="${build.test.dir}" />
        <fileset dir="${dist.dir}">
            <include name="**/*.jar" />
        </fileset>
    	<fileset dir="${lib.dir}">
            <include name="**/*.jar" />
            <exclude name="pellet/pellet-cli.jar" />
            <exclude name="pellet/xsdlib/*.jar" />
            <exclude name="pellet/jena/*.jar" />
			<exclude name="cobertura/log4j*.jar" />
        </fileset>
    </path>
    
    <path id="cobertura.classpath" >
    	<fileset dir="${lib.dir}/cobertura/">
            <include name="**/*.jar" />
        </fileset>
    </path>
    
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
    
    <target name="compile" description="TODO">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${dist.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}"
    			classpathref="project.classpath"
        		debug="true" deprecation="true"
				includeantruntime="false"
				source="${java_version}" target="${java_version}" />
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <include name="*.properties" />
            </fileset>
        </copy>
    </target>
	
    <target name="compile_test" depends="dist" description="TODO">
        <mkdir dir="${build.test.dir}" />
        <mkdir dir="${build.instrument.dir}" />
        <javac srcdir="${src.test.dir}" destdir="${build.test.dir}"
				classpathref="project.classpath"
				debug="true" deprecation="true"
				includeantruntime="false" 
				source="${java_version}" target="${java_version}"/>
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <include name="*.properties" />
            </fileset>
        </copy>
		<cobertura-instrument todir="${build.instrument.dir}">
		    <fileset dir="${build.dir}">
		        <include name="**/*.class"/>
		    </fileset>
		</cobertura-instrument>
    </target>
	
	<target name="fetch" depends="dist" description="TODO">
		<property name="classpath" refid="project.classpath" />
	   	<java classname="at.ac.tuwien.auto.thinkhome.weatherimporter.main.Main" fork="true">
 	        <arg value="fetch" />
	        <classpath>
	            <pathelement path="${classpath}" />
	        </classpath>
	    </java>
	</target>

	<target name="turtle" depends="dist" description="TODO">
	    <java classname="at.ac.tuwien.auto.thinkhome.weatherimporter.main.Main" fork="true" classpathref="project.classpath">
	        <arg value="turtle" />
	    </java>
	</target>

		<target name="timestamps" depends="dist" description="TODO">
	    <java classname="at.ac.tuwien.auto.thinkhome.weatherimporter.main.Main" fork="true" classpathref="project.classpath">
	        <arg value="timestamps" />
	    </java>
	</target>


	<target name="remove" depends="dist" description="TODO">
	    <java classname="at.ac.tuwien.auto.thinkhome.weatherimporter.main.Main" fork="true" classpathref="project.classpath">
	        <arg value="remove" />
	    </java>
	</target>
	
	<target name="test" depends="compile_test" description="TODO">
        <delete dir="${reports.dir}" />
        <mkdir dir="${reports.dir}" />
		<property name="classpath" refid="project.classpath" />
		<junit printsummary="yes">
		    <classpath location="${build.instrument.dir}" />
			<classpath>
				<pathelement path="${classpath}"/>
			</classpath>
			
			<formatter type="xml"/>

			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${src.test.dir}">
					<include name="**/*.java"/>
					<exclude name="**/base/*.java"/>
					<!-- TODO remove -->
					<exclude name="**/model/*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="dist" depends="compile">
        <mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/WeatherImporter.jar">
			<fileset dir="${build.dir}">
			    <exclude name="**/YrNoImporter.class" />
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="at.ac.tuwien.auto.thinkhome.weatherimporter.main.Main" />
			</manifest>
		</jar>
		<jar destfile="${dist.dir}/YrNoPlugin.jar">
			<fileset dir="${build.dir}">
			    <filename name="**/YrNoImporter.class" />
			</fileset>
		</jar>
	</target>	
	
    <target name="clean" description="Clean build products.">
        <delete dir="${dist.dir}" />
        <delete dir="${build.dir}" />
        <delete dir="${build.test.dir}" />
        <delete dir="${build.instrument.dir}" />
        <delete dir="${build.coverage.dir}" />
        <delete dir="${reports.dir}" />
    </target>
    
    <target name="rebuild" depends="clean, compile_test, dist" description="TODO" />
    
    <target name="coverage">
        <mkdir dir="${build.coverage.dir}" />
       	<cobertura-report destdir="${build.coverage.dir}">
       	    <fileset dir="${src.dir}" />
       	    <fileset dir="${src.test.dir}" />
       	</cobertura-report>
	</target>
</project>
